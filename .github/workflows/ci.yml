name: Terraform CI
on:
  workflow_dispatch:
    inputs:
      instance_name:
        description: 'Name of the AWS Instance'  
        required: true 
      aws_region:
        description: 'AWS Region for the instance'
        required: true
      instance_type:
        description: 'AWS instance type'
        required: true
      action:
        description: 'Action to perform (apply/destroy)'
        required: true

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    
  
    if: ${{ github.event.inputs.action == 'apply' }}
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ github.event.inputs.aws_region }}

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
      
    
    - name: Terraform Validate
      run: terraform validate
      working-directory: ./terraform

    - name: Terraform Plan
      run: terraform plan -var instance_name=${{ github.event.inputs.instance_name }} -var aws_region=${{ github.event.inputs.aws_region }} -var instance_type=${{ github.event.inputs.instance_type }} -out=tfplan
      working-directory: ./terraform

    - name: Terraform apply
      run: terraform apply "tfplan"
      working-directory: ./terraform

  terraform-destroy:
    runs-on: ubuntu-latest
    
    if: ${{ github.event.inputs.action == 'destroy' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ github.event.inputs.aws_region }}
        
        
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
         
    # Destroy plan 

    - name: terraform destroy plan
      run: terraform plan -destroy -out=tfplan
      working-directory: ./terraform
    
    # Destroy
    - name: terraform destroy 
      run:  terraform apply "tfplan"
      working-directory: ./terraform
